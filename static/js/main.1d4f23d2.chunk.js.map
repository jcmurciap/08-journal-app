{"version":3,"sources":["components/types/types.js","components/reducers/uiReducer.js","components/reducers/notesReducer.js","components/store/store.js","components/reducers/authReducer.js","firebase/firebase-config.js","components/actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","components/actions/notes.js","components/actions/auth.js","components/hooks/useForms.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","styles/components/notes/NotesAppBar.js","styles/components/notes/NotesScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","initialstate","notes","active","createThunkMiddleware","extraArgument","dispatch","getState","next","action","thunk","withExtraArgument","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPIID","initializeApp","db","getFirestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","loadNotes","a","getDocs","collection","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","setNotes","startSaveNote","url","noteToFirestore","updateDoc","doc","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","catch","e","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","autoComplete","onChange","placeholder","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","fname","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","NotesAppBar","style","display","files","text","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NotesScreen","activeId","useRef","useEffect","current","deleteDoc","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","addDoc","JournalScreen","PrivateRoute","isLoggedIn","Component","component","rest","props","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","setisLoggedIn","onAuthStateChanged","path","exact","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d4f23d2.chunk.js","sourcesContent":["\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n    uiSetError: '[UI] set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    // blocking login botton\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',   \n\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: ''\n};\n\nexport const uiReducer = ( state=initialState, action ) => {\n    \n    switch ( action.type ) {\n        \n        case types.uiSetError:    // [UI] set Error\n            return {\n                ...state,\n                msgError: action.payload,\n            }\n        case types.uiRemoveError: // [UI] Remove Error\n            return {\n                ...state,\n                msgError: null,\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true, // maybe fixme!\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false, // maybe fixme!\n            }\n        default:\n            return state;\n    }\n}\n\n\n","/*\ncomo quiero que esté mi state\n\n    {\n        // cada una de las tarjetas\n        notes: [],\n        // nota activa\n        active: null,\n        active: {\n            id: 'HJFBBVVJH',\n            title: '',\n            body: '',\n            imageURL: '',\n            date: 13456\n        }\n    }\n*/\n\nimport { types } from \"../types/types\";\n\nconst initialstate = {\n    notes: [],\n    active: null,\n}\n\nexport const noteReducer = ( state=initialstate, action ) => {\n\n    switch( action.type ){\n\n        case types.notesActive:\n            return {\n                // clona el estado anterior\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case types.notesAddNew:\n            return {\n                ...state, \n                notes: [action.payload, ...state.notes],// ...state.notes => crea copia de las notas\n            }    \n        \n        \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n        \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map( \n                    note => note.id === action.payload.id\n                    ? action.payload.note\n                    : note\n                )\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                // purga 'active' de la nota en redux\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload ),\n            }        \n        \n        case types.notesLogoutCleaning:\n            return {\n                ...state,// cosas que no quiera perder - me falto incluir\n                active: null, // nota activa-me falto incluir\n                notes: [], // fue mi respuesta\n            }\n        \n        \n            default:\n            return state;\n    }\n}\n\n\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport { authReducer } from \"../reducers/authReducer\";\n// import thunk from 'redux-thunk';\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { noteReducer } from \"../reducers/notesReducer\";\n\nfunction createThunkMiddleware(extraArgument) {\n    return ({ dispatch, getState }) => (next) => (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState, extraArgument);\n      }\n  \n      return next(action);\n    };\n  }\n  \n  const thunk = createThunkMiddleware();\n  thunk.withExtraArgument = createThunkMiddleware;\n  \n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: noteReducer,\n})\n\nexport const store = createStore( \n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    ) \n);\n","import { types } from \"../types/types\"\n/*\n    no autenticado => state={}\n    autenticado => state={\n        uid: 'any id'\n        name: 'user name'\n    }\n*/\n\nexport const authReducer = ( state = {}, action ) => {\n    \n    switch ( action.type ) {\n        \n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName,\n            }\n        \n        case types.logout:\n            return {}\n        \n        default:\n            return state;\n    }\n}\n","\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\nimport { GoogleAuthProvider } from 'firebase/auth';\n\nconst firebaseConfig = {\n    \n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPIID,\n    \n};\n  \n// const firebaseConfigTesting = {\n//     apiKey: \"AIzaSyCU6Z6yoi2DprVOMMLW4_QfGecLIrNlNqM\",\n//     authDomain: \"sql-demos-d98f7.firebaseapp.com\",\n//     projectId: \"sql-demos-d98f7\",\n//     storageBucket: \"sql-demos-d98f7.appspot.com\",\n//     messagingSenderId: \"624844650207\",\n//     appId: \"1:624844650207:web:d20f1934cfd31d34f21b6a\",\n//     measurementId: \"G-ECZTBZL9KC\"\n//   };\n\n// if (process.env.NODE_ENV === 'test') {\n//     // testing\n//     initializeApp( firebaseConfigTesting );\n// } else {\n//     // dev/prod\n//     initializeApp( firebaseConfig );\n// }\n\ninitializeApp( firebaseConfig )\n\n// Initialize Firebase\nconst db = getFirestore();\nconst googleAuthProvider =  new GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n\n}\n","import { types } from '../types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err,\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading,\n}); \n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading,\n});\n\n","\nimport { db } from '../firebase/firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\n\nexport const loadNotes = async ( uid ) => {\n    const notesSnap = await getDocs(collection(db, `${ uid }/journal/notes` ));\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })    \n    })\n    \n    return notes;\n}\n","export const fileUpload = async ( file ) => {\n\n    const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dyigfrbji/upload';\n    \n    const formData = new FormData();\n    \n    // react-journal is passed as the upload_preset parameter when calling the upload API (cloudinary.com)\n    formData.append('upload_preset', 'react-journal'); \n    \n    formData.append('file', file);\n\n    try {\n        const resp = await fetch( cloudinaryUrl, {\n            method: 'POST',\n            body: formData\n        });\n        if ( resp.ok ){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            //throw await resp.json();\n            return null;\n        }  \n    } catch (err) { \n        throw err;\n    }\n}\n","// libraries\nimport Swal from 'sweetalert2';\nimport { collection, addDoc, doc, updateDoc, deleteDoc} from 'firebase/firestore';\n\n// components\nimport { types } from '../types/types';\nimport { loadNotes } from \"../../helpers/loadNotes\";\nimport { fileUpload } from '../../helpers/fileUpload';\nimport { db } from \"../../firebase/firebase-config\";\n\nexport const startNewNote = () => {\n\n    return async (dispatch , getState) => {\n        \n        const { uid } = getState().auth;\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await addDoc( collection( db, `${ uid }/journal/notes` ), newNote );\n        \n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note,\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id,\n        ...note,\n    }\n});\n\nexport const startLoadingNotes = ( uid ) => {\n    return async( dispatch ) => {\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n    }\n};\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes,\n});\n\nexport const startSaveNote = ( note ) => {\n    \n    return async( dispatch, getState ) => {\n        \n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url\n        };\n\n        const noteToFirestore = {...note}; // id,body,date,title,url\n        delete noteToFirestore.id; // body,date,title,url\n\n        // guarda en la base de datos\n        await updateDoc(doc(db, `${uid}/journal/notes/${note.id}`), noteToFirestore);\n    \n        dispatch(refreshNote(note.id, note));\n        Swal.fire('Saved', note.title, 'success');\n    }; \n};\n\n\n// actualiza del store el titulo y el body de la tarjeta que cambia\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id, \n        note: {\n            id,\n            ...note,\n        }\n    }\n});  \n\nexport const startUploading = ( file ) => {\n    \n    return async( dispatch, getState ) => {\n        \n        const { active: activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n        \n        const fileUrl = await fileUpload( file );\n        \n        activeNote.url = fileUrl;\n        dispatch( startSaveNote( activeNote ) );\n        \n        Swal.close();\n    };\n};\n\nexport const startDeleting = ( id ) => {\n    \n    return async( dispatch, getState ) => {\n        \n        const uid = getState().auth.uid;\n        await deleteDoc( doc(db, `${ uid }/journal/notes/${ id }`));\n        dispatch( deleteNote( id ) );\n    };\n};\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id,\n});\n\nexport const noteLogout = ( notes ) => ({\n    \n    type: types.notesLogoutCleaning,\n})\n","// libraries\nimport Swal from 'sweetalert2';\nimport 'firebase/firestore';\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { googleAuthProvider } from '../../firebase/firebase-config';\n\n// components\nimport { finishLoading, startLoading } from './ui';\nimport { noteLogout } from './notes';\nimport { types } from '../types/types';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n\n    \n    return ( dispatch ) => {\n        // gateway to the Firebase authentication API\n        const auth = getAuth();\n        \n        dispatch( startLoading() );\n        \n        return signInWithEmailAndPassword( auth, email, password )\n            .then(({ user }) => {\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch( finishLoading() );\n            })   \n            .catch( e => {\n                dispatch( finishLoading() );\n                Swal.fire( 'Error', e.message, 'error' );\n            });\n    }; \n}\n\n// save data in firebase\nexport const startRegisterWithEmailPasswordName = ( name, email, password ) => {\n    \n    return ( dispatch ) => {\n        const auth = getAuth();\n\n        // autenticacion\n        createUserWithEmailAndPassword( auth, email, password )\n            .then( async({ user }) => {\n                await updateProfile( user, { displayName: name } );\n                dispatch( \n                    login( user.uid, user.displayName ) \n                );\n            })\n            .catch( e  => {\n                Swal.fire( 'Error', e.message, 'error' );\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n        const auth = getAuth();\n        signInWithPopup( auth, googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch( login( user.uid, user.displayName ) );\n            });\n    };\n}\n\nexport const login = ( uid, displayName ) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName \n        }\n    };\n}\n\nexport const startLogout = () => {    \n    \n    return async( dispatch ) => {\n        \n        const auth = getAuth();\n        await signOut( auth );\n        dispatch( logout() );\n        dispatch( noteLogout() );  \n    };\n}\n\nexport const logout = () => ({\n    type: types.logout\n})\n","import { useState } from 'react'\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState)\n\n    // Limpia el textbox después de oprimir el boton\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n    \n    // e = is an event\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value // name: your input\n        })\n    }\n    return [ values, handleInputChange, reset ];\n}\n\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// components\nimport { useForm } from '../hooks/useForms';\nimport { startGoogleLogin, startLoginEmailPassword } from '../actions/auth';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    \n    const { loading } = useSelector( state => state.ui); // REVISE COMO FUNCIONA \n    \n    const [ formValues, handleInputChange ] = useForm({}); \n    \n    const { email, password } = formValues;\n        \n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) ); // registrado en redux\n    };\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    };\n    \n    return (\n        <>\n            <div className='auth__container'>\n                <h3 className=\"auth__title\">\n                    Sign In\n                </h3>\n                <form \n                    onSubmit={ handleLogin }\n                    className=\"animate__animated animate__fadeIn animate__faster\"\n                >\n                    <input \n                        autoComplete=\"off\"\n                        className=\"auth__input\"\n                        name=\"email\"\n                        onChange={ handleInputChange }    \n                        placeholder=\"Email\"\n                        type=\"text\"\n                        value={ email }\n                    />\n                    <input \n                        className=\"auth__input\"\n                        name=\"password\" \n                        onChange={ handleInputChange }  \n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={ password } \n                    />\n                \n                    <button \n                        className=\"btn btn-primary btn-block\"\n                        disabled={ loading }\n                        type=\"submit\"\n                    >\n                        Login\n                    </button>\n                    \n                    <div className=\"auth__social-networks\">\n                        <p>Login with social networks</p>\n                        <div \n                            className=\"google-btn\"\n                            onClick={ handleGoogleLogin }\n                        >\n                            <div className=\"google-icon-wrapper\">\n                                <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                            </div>\n                            <p className=\"btn-text\">\n                                <b>Sign In with google</b>\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <Link to=\"/auth/register\" className=\"link\">\n                        Create new account\n                    </Link>\n                </form>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../hooks/useForms';\nimport validator from 'validator';\nimport { removeError, setError } from '../actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\n\nexport const RegisterScreen = () => {\n   \n    const dispatch = useDispatch(); \n    const {msgError} = useSelector(state => state.ui);\n    \n    const [ formValues, handleInputChange ] = useForm({});\n    const { fname, email, password, password2 } = formValues;\n    \n    const handleRegister = (e) => {\n        e.preventDefault();\n        \n        if ( isFormValid() ){\n            dispatch( startRegisterWithEmailPasswordName( fname, email, password ) )\n        }\n    }\n\n    const isFormValid = () => {\n        if( fname.trim().length === 0 ){\n            dispatch(setError('Name is requerided.\\n\\tTry again'));\n            return false;\n        }else if( !validator.isEmail( email ) ){\n            dispatch(setError('Email is requerided.\\n\\tTry again'));\n            return false;\n        }else if( password !== password2 || password.length < 5 ) {\n            dispatch(setError('Passwords needs to be equal and has at least 6 characters.\\n\\tTry again'));\n            return false;\n        }\n        dispatch(removeError());\n        return true;\n    }; \n\n    return (\n        <>\n            <div className='auth__container'>\n                <h3 className=\"auth__title\">\n                    Create New Account\n                </h3>\n\n                <form \n                    onSubmit={handleRegister}\n                    className=\"animate__animated animate__fadeIn animate__faster\"\n                >\n                    {\n                        msgError && (\n                            <div className=\"auth__alert-error\">\n                                { msgError }\n                            </div>\n                        )\n                    }\n                    <input \n                        type=\"text\"\n                        placeholder=\"Name\"\n                        name=\"fname\"\n                        className=\"auth__input\"\n                        autoComplete=\"off\"\n                        value={ fname }    \n                        onChange={ handleInputChange }\n                    />\n                    <input \n                        type=\"text\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        className=\"auth__input\"\n                        autoComplete=\"off\"\n                        value={ email }    \n                        onChange={ handleInputChange }\n                    />\n                    <input \n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\" \n                        className=\"auth__input\"\n                        value={ password }   \n                        onChange={ handleInputChange }\n                    />\n                    <input \n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\" \n                        className=\"auth__input\"\n                        value={ password2 }   \n                        onChange={ handleInputChange }\n                    />\n\n                    <button \n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block mb-5\"\n                    >\n                        Register\n                    </button>\n\n                    <Link \n                        to=\"/auth/login\"\n                        className=\"link\"\n                    >\n                        Already registered?\n                    </Link>\n                </form>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../../components/actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector( state => state.notes );\n    \n    const handleSave = () => {\n        // active === note\n        dispatch(startSaveNote( active ))\n    }\n    \n    const handlePictureUpload = () => {\n        document.querySelector('#fileSelector').click();\n    \n    }\n    \n    const handleFileChange = ( e ) => {\n        const file = e.target.files[0];\n        \n        if ( file ){\n            dispatch(startUploading(file))\n        }  \n    \n    }\n    \n    \n    return (\n\n        <div className=\"notes__appbar\">\n            <span>21 septiembre 2021</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureUpload }\n                >\n                    Picture\n                </button>\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../../components/actions/notes';\nimport { useForm } from '../../../components/hooks/useForms';\nimport { NotesAppBar } from './NotesAppBar'\n\n\nexport const NotesScreen = () => {\n    \n    const dispatch = useDispatch();\n    \n    // referencia a la nota activa\n    const { active: note } = useSelector(state => state.notes);\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { title, body } = formValues;\n    \n    const activeId = useRef( note.id );\n    \n    // el efecto se dispara si y solo si el 'id' cambia\n    useEffect( () => {\n        // evita loop infinito entre useSelector y useForm\n        if ( note.id  !== activeId.current ){\n            reset( note );\n            // nuevo valor de 'activeId'\n            activeId.current = note.id\n        }\n    }, [ note, reset ] );\n\n    \n    useEffect(() => {\n        \n        dispatch(activeNote(formValues.id, { ...formValues })); // ...formValues se desestructura en 'notes'       \n    }, [ formValues, dispatch ])\n\n\n    const handleDelete = () => {\n        dispatch(startDeleting( note.id ));    \n    }\n    \n    \n    \n    return (\n        \n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n            \n            {/* Agrupador del formularo */}\n            <div className=\"notes__content\">\n                <input \n                    className=\"notes__title-input\"\n                    placeholder=\"Some awesome title\"\n                    type=\"text\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n                \n                <textarea\n                    className=\"notes__textarea\"\n                    placeholder=\"What hapenned today\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                >\n                </textarea>\n\n                {\n                    ( note.url ) &&\n                    (\n                        <div className=\"notes__image\">\n                            <img\n                                src={note.url}\n                                alt=\"code\"\n                            />\n                        </div>\n                    )\n                }\n\n            </div>\n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>    \n        \n        \n        </div>\n    )\n}\n\n","\nimport React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>Select something<br/>or create an entry</p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { activeNote } from '../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n    const noteDate = moment( date );\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {        \n        dispatch( \n            activeNote( \n                id, { date, title, body } \n            )\n        );\n    }\n\n    return (\n        <div \n            onClick={ handleEntryClick }\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\">\n            \n            {\n                url && \n                <div \n                    className=\"journal__entry-picture\"\n                    // todos lo style en react deben ser objetos\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }   \n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title} \n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>    \n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n    \n    const { notes } = useSelector(state => state.notes);\n    \n    \n    return (\n        <div className=\"journal__entries animate__animated animate__fadeIn animate__fast\">\n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        {...note}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../actions/auth';\nimport { startNewNote } from '../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n    \n    const handleLogout = () => {\n        dispatch( startLogout() );\n    };   \n    \n    const handleAddNew = () => {\n        dispatch( startNewNote() )\n    };\n    \n    \n    return (\n        \n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">New entry</p>\n            </div>\n\n            <JournalEntries />\n        \n        </aside>\n    \n    )\n}\n\n\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NotesScreen } from '../../styles/components/notes/NotesScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\n\n\nexport const JournalScreen = () => {\n    \n    // extraer algo del store o el state\n    const { active } = useSelector( state => state.notes );\n    \n    \n    return (\n\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\n        >\n\n            <Sidebar />\n        \n            <main>\n                {\n                    (active)\n                        ? ( <NotesScreen /> )\n                        // pantalla morada\n                        : ( <NothingSelected  /> )\n                }                \n            </main>\n        </div>\n    )\n}\n\n\n\n","// modules\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isLoggedIn, // bool\n    component: Component, // function\n    ...rest // { computedMatch,location } \n}) => {\n    \n    \n    return (\n        <Route { ...rest }\n            // props => history,location,match\n            component={( props ) => (\n                ( isLoggedIn )\n                    ?( <Component { ...props }/> ) // ... spread operator\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.protoTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    \n    isLoggedIn,\n    component: Component,\n    ...rest\n    }) => {\n        return (\n        <Route { ...rest }\n            component={( props ) => (\n                ( !isLoggedIn )\n                    ?( < Component { ...props } /> )\n                    : ( < Redirect to=\"/\" /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.protoTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import { getAuth, onAuthStateChanged } from '@firebase/auth';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { login } from '../components/actions/auth';\nimport { startLoadingNotes } from '../components/actions/notes';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    \n    const dispatch = useDispatch(); // reference a la funcion dispatch de la tienda redux\n    const [ checking, setChecking ] = useState( true );\n    const [ isLoggedIn, setisLoggedIn ] = useState( false );\n    \n    useEffect( () => {    \n        \n        const auth = getAuth(); // puerta de entrada a la API de autenticación de Firebase \n        \n        onAuthStateChanged( auth, async( user ) => {\n            \n            if ( user?.uid ){\n                dispatch( login( user.uid, user.displayName ) );\n                setisLoggedIn( true );\n                dispatch(startLoadingNotes(user.uid))\n            } else {\n                setisLoggedIn( false );\n            }\n            setChecking( false );\n        });\n    }, [ dispatch, setChecking, setisLoggedIn ]);\n\n    if( checking ){\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute isLoggedIn={isLoggedIn} path=\"/auth/register\" component={RegisterScreen} />\n                    <PublicRoute isLoggedIn={isLoggedIn} path=\"/auth/\" component={LoginScreen} />\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        isLoggedIn={isLoggedIn}\n                        component={JournalScreen}\n                    />\n                    <Redirect to=\"/auth/login\"/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './components/store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const JournalApp = () => {\n    \n    return (\n        <Provider store={ store }>\n            <AppRouter /> \n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}